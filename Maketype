SHELL		= /bin/sh

ifeq ($(wildcard oscam-boxkeys.np), oscam-boxkeys.np)
  DEFINES += -DCS_WITH_BOXKEYS
endif

WITH_SSL=$(subst ",,$(filter-out \#define, $(shell grep '^\#define WITH_SSL' oscam-config.h)))
ifeq ($(WITH_SSL), WITH_SSL)
	LIB_SSL=-lssl
endif

DS_CC      ?= gcc
DS_AR      ?= ar
DS_LD      ?= ld
DS_RL      ?= ranlib
DS_ST      ?= strip
DS_ARFLAGS ?= -crsl
DS_CFLAGS  ?= -c

CROSS      ?= $(DS_CROSS)
CONF_DIR   ?= $(DS_CONFDIR)
TYPE       ?= $(DS_TYPE)
TYPE       := $(subst cross-,,$(TYPE))
TYPE       := $(subst -debug,,$(TYPE))

LIB_PTHREAD ?= -lpthread
LIB_MATH    ?= -lm
LIB_CRYPTO  ?= -lcrypto

ifdef NO_LIBCRYPTO
LIB_CRYPTO =
else
DEFINES += -DWITH_LIBCRYPTO
endif

CC_FLAGS       ?= -O2
CC_FLAGS_DEBUG ?= -O0 -ggdb
CC_FLAGS_WARN  ?= -Winline -Wall -Wextra
CC_FLAGS_EXTRA ?= -fno-strict-aliasing

ifdef DEBUG
TYPE +=-debug
CC_FLAGS += $(CC_FLAGS_DEBUG)
endif
CC_FLAGS += $(CC_FLAGS_WARN) $(CC_FLAGS_EXTRA)

LIBUSB     ?= /usr/local/lib/libusb-1.0.a
LIBUSB_DEFS?= -DLIBUSB -I/usr/local/include
ifdef USE_LIBUSB
LIB_USB  = $(LIBUSB)
DEFINES += $(LIBUSB_DEFS)
endif

PCSC      ?= -lpcsclite
PCSC_DEFS ?= -DHAVE_PCSC=1 -I/usr/include/PCSC
ifdef USE_PCSC
LIB_PCSC  = $(PCSC)
DEFINES  += $(PCSC_DEFS)
endif

DEFINES += -DCS_CONFDIR="\"$(CONF_DIR)\""
DEFINES += -DCS_SVN_VERSION="\"$(SVN_REV)\""

CC		= $(CROSS)$(DS_CC)
AR		= $(CROSS)$(DS_AR)
STRIP		= $(CROSS)$(DS_ST)
RANLIB		= $(CROSS)$(DS_RL)

CFLAGS		= $(CC_FLAGS) $(DS_OPTS) $(DEFINES) $(DS_CFLAGS)
LDFLAGS		= $(DS_OPTS) $(DS_LDFLAGS)
ARFLAGS		= $(DS_ARFLAGS)
LIBS		= $(OS_LIBS) $(LIB_USB) $(LIB_PCSC) $(LIB_CRYPTO) $(LIB_MATH) $(LIB_PTHREAD) $(LIB_SSL)

export		CC AR STRIP RANLIB CFLAGS LDFLAGS ARFLAGS TYPE

GENERAL		= Makefile Maketype globals.h oscam-config.h

Q =
SAY = @true
ifndef V
Q = @
NP = --no-print-directory
SAY = @echo
endif
export Q SAY

ifeq ($(wildcard csgbox), csgbox)
 VERX	= -gbx-$(subst ",,$(filter-out \#define GBXVERSION,$(shell grep GBXVERSION csgbox/gbox.h)))
endif

EXEFILE1	= Distribution/oscam-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYPE))
EXEFILE2	= Distribution/list_smargo-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYPE))

LIBDIR		= lib
LIBFILE1	= $(LIBDIR)/libcs-$(TYPE).a
LIBFILE2	= $(LIBDIR)/libcscrypt-$(TYPE).a
LIBFILE3	= $(LIBDIR)/libcsctapi-$(TYPE).a
LIBFILE4	= $(LIBDIR)/libminilzo-$(TYPE).a

OBJECTS1	= $(LIBFILE1)(oscam-simples.o) \
		  $(LIBFILE1)(oscam-config.o) \
		  $(LIBFILE1)(oscam-log.o) \
		  $(LIBFILE1)(oscam-reader.o) \
		  $(LIBFILE1)(oscam-garbage.o) \
		  $(LIBFILE1)(reader-common.o) \
		  $(LIBFILE1)(reader-irdeto.o) \
		  $(LIBFILE1)(reader-viaccess.o) \
		  $(LIBFILE1)(reader-videoguard1.o) \
		  $(LIBFILE1)(reader-videoguard12.o) \
		  $(LIBFILE1)(reader-videoguard2.o) \
		  $(LIBFILE1)(reader-videoguard-common.o) \
		  $(LIBFILE1)(reader-nds.o) \
		  $(LIBFILE1)(reader-seca.o) \
		  $(LIBFILE1)(reader-bulcrypt.o) \
		  $(LIBFILE1)(reader-cryptoworks.o) \
		  $(LIBFILE1)(reader-conax.o) \
		  $(LIBFILE1)(reader-dre.o) \
		  $(LIBFILE1)(reader-nagra.o) \
		  $(LIBFILE1)(reader-tongfang.o) \
		  $(LIBFILE1)(module-camd33.o) \
		  $(LIBFILE1)(module-camd35.o) \
		  $(LIBFILE1)(module-radegast.o) \
		  $(LIBFILE1)(module-serial.o) \
		  $(LIBFILE1)(module-monitor.o) \
		  $(LIBFILE1)(module-newcamd.o) \
		  $(LIBFILE1)(module-cccam.o) \
		  $(LIBFILE1)(module-cccshare.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-gbox.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-constcw.o) \
		  $(LIBFILE1)(module-dvbapi.o) \
		  $(LIBFILE1)(module-stat.o) \
		  $(LIBFILE1)(module-csp.o) \
		  $(LIBFILE1)(module-datastruct-llist.o) \
		  $(LIBFILE1)(oscam-chk.o) \
		  $(LIBFILE1)(oscam-http.o) \
		  $(LIBFILE1)(oscam-http-helpers.o) \
		  $(LIBFILE1)(oscam-ac.o) \
		  $(LIBFILE1)(module-coolapi.o)\
		  $(LIBFILE1)(module-lcd.o)

ifdef USE_LIBUSB
all:		prepare $(EXEFILE1) $(EXEFILE2)
else
all:		prepare $(EXEFILE1)
endif

prepare:
	@-test -d "$(LIBDIR)" || mkdir "$(LIBDIR)"
	@-echo -e "\
+-------------------------------------------------------------------------------\n\
| OSCAM ver: $(VER) rev: $(SVN_REV) platform: $(TYPE)\n\
| Build settings:\n\
|  CROSS    = $(CROSS)\n\
|  CC       = $(CC)\n\
|  AR       = $(AR)\n\
|  STRIP    = $(STRIP)\n\
|  RANLIB   = $(RANLIB)\n\
|  CFLAGS   = $(DS_OPTS) $(CC_FLAGS) $(DS_CFLAGS)\n\
|  LDFLAGS  = $(DS_OPTS) $(DS_LDFLAGS)\n\
|  ARFLAGS  = $(ARFLAGS)\n\
|  LIBS     = $(LIBS)\n\
|  CONF_DIR = $(CONF_DIR)\n\
|  DEFINES  = $(DEFINES)\n\
+-------------------------------------------------------------------------------"
	@echo "$(TYPE)" | awk -F- ' \
	  { \
	    printf("#define CS_OSTYPE \"%s\"\n", $$0);  \
	    printf("#define CS_OS_CPU \"%s\"\n", $$1);  \
	    printf("#define CS_OS_HW  \"%s\"\n", $$2);  \
	    printf("#define CS_OS_SYS \"%s\"\n", $$3);  \
	  }' > oscam-ostype.h

ifeq ($(wildcard csgbox), csgbox)
	@-echo "#define CS_WITH_GBOX 1" >> oscam-ostype.h
	$(SAY) "MAKE	csgbox"
	$(Q)$(MAKE) $(NP) -C csgbox
endif
	$(SAY) "MAKE	algo"
	$(Q)$(MAKE) $(NP) -C algo
	$(SAY) "MAKE	cscrypt"
	$(Q)$(MAKE) $(NP) -C cscrypt
	$(SAY) "MAKE	csctapi"
	$(Q)$(MAKE) $(NP) -C csctapi

$(EXEFILE1):	oscam.c $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) $(GENERAL)
	$(SAY) "LD	$@"
	$(Q)$(CC) $(LDFLAGS) oscam.c $(LIBS) $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) -o $@
ifndef DEBUG
	$(SAY) "STRIP	$@"
	$(Q)$(STRIP) $@
endif

$(EXEFILE2):	utils/list_smargo.c
	$(SAY) "LD	$@"
	$(Q)$(CC) $(LDFLAGS) utils/list_smargo.c $(LIBS) -o $@
ifndef DEBUG
	$(SAY) "STRIP	$@"
	$(Q)$(STRIP) $@
endif

$(LIBFILE1):	$(OBJECTS1)
	-$(Q)$(RANLIB) $@

$(OBJECTS1):	$(GENERAL)

.c.a:
	$(SAY) "CC	$<"
	$(Q)$(CC) $(CFLAGS) -Icsctapi $<
	$(Q)$(AR) $(ARFLAGS) $@ $*.o
	-@rm -f $*.o

.SUFFIXES:	.o .c .a
