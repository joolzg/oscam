SHELL		= /bin/sh

ifeq ($(wildcard oscam-boxkeys.np), oscam-boxkeys.np)
  DEFINES += -DCS_WITH_BOXKEYS
endif

WITH_SSL=$(subst ",,$(filter-out \#define, $(shell grep '^\#define WITH_SSL' oscam-config.h)))
ifeq ($(WITH_SSL), WITH_SSL)
	LIB_SSL=-lssl
endif

DS_CC      ?= gcc
DS_AR      ?= ar
DS_LD      ?= ld
DS_RL      ?= ranlib
DS_ST      ?= strip
DS_ARFLAGS ?= -rsl
DS_CFLAGS  ?= -c
DS_CROSS   ?= $(CROSS)
DS_CONFDIR ?= $(CONF_DIR)

LIB_PTHREAD ?= -lpthread
LIB_MATH    ?= -lm
LIB_CRYPTO  ?= -lcrypto

ifdef NO_LIBCRYPTO
LIB_CRYPTO =
else
DEFINES += -DWITH_LIBCRYPTO
endif

CC_FLAGS       ?= -O2
CC_FLAGS_DEBUG ?= -O0 -ggdb
CC_FLAGS_WARN  ?= -Winline -Wall -Wextra

ifdef DEBUG
CC_FLAGS += $(CC_FLAGS_DEBUG)
endif
CC_FLAGS += $(CC_FLAGS_WARN)

LIBUSB     ?= /usr/local/lib/libusb-1.0.a
LIBUSB_DEFS?= -DLIBUSB -I/usr/local/include

ifdef USE_LIBUSB
LIB_USB  = $(LIBUSB)
DEFINES += $(LIBUSB_DEFS)
endif

DEFINES += -DCS_CONFDIR="\"$(CONF_DIR)\""
DEFINES += -DCS_SVN_VERSION="\"$(SVN_REV)\""

CC		= $(DS_CROSS)$(DS_CC)
AR		= $(DS_CROSS)$(DS_AR)
STRIP		= $(DS_CROSS)$(DS_ST)
RANLIB		= $(DS_CROSS)$(DS_RL)

CFLAGS		= $(CC_FLAGS) $(DS_OPTS) $(DEFINES) $(DS_CFLAGS)
LDFLAGS		= $(DS_OPTS) $(DS_LDFLAGS)
ARFLAGS		= $(DS_ARFLAGS)
LIBS		= $(OS_LIBS) $(LIB_USB) $(LIB_CRYPTO) $(LIB_MATH) $(LIB_PTHREAD) $(LIB_SSL)

export		CC AR STRIP RANLIB CFLAGS LDFLAGS ARFLAGS

GENERAL		= Makefile Maketype globals.h oscam-config.h

Q =
SAY = @true
ifndef V
Q = @
SAY = @echo
endif
export Q SAY

ifeq ($(wildcard csgbox), csgbox)
 VERX	= -gbx-$(subst ",,$(filter-out \#define GBXVERSION,$(shell grep GBXVERSION csgbox/gbox.h)))
endif

EXEFILE1	= Distribution/oscam-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYP))
EXEFILE2	= Distribution/list_smargo-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYP))

LIBDIR		= lib
LIBFILE1	= $(LIBDIR)/libcs-$(TYP).a
LIBFILE2	= $(LIBDIR)/libcscrypt-$(TYP).a
LIBFILE3	= $(LIBDIR)/libcsctapi-$(TYP).a
LIBFILE4	= $(LIBDIR)/libminilzo-$(TYP).a

OBJECTS1	= $(LIBFILE1)(oscam-simples.o) \
		  $(LIBFILE1)(oscam-config.o) \
		  $(LIBFILE1)(oscam-log.o) \
		  $(LIBFILE1)(oscam-reader.o) \
		  $(LIBFILE1)(oscam-garbage.o) \
		  $(LIBFILE1)(reader-common.o) \
		  $(LIBFILE1)(reader-irdeto.o) \
		  $(LIBFILE1)(reader-viaccess.o) \
		  $(LIBFILE1)(reader-videoguard1.o) \
		  $(LIBFILE1)(reader-videoguard12.o) \
		  $(LIBFILE1)(reader-videoguard2.o) \
		  $(LIBFILE1)(reader-videoguard-common.o) \
		  $(LIBFILE1)(reader-nds.o) \
		  $(LIBFILE1)(reader-seca.o) \
		  $(LIBFILE1)(reader-bulcrypt.o) \
		  $(LIBFILE1)(reader-cryptoworks.o) \
		  $(LIBFILE1)(reader-conax.o) \
		  $(LIBFILE1)(reader-dre.o) \
		  $(LIBFILE1)(reader-nagra.o) \
		  $(LIBFILE1)(reader-tongfang.o) \
		  $(LIBFILE1)(module-camd33.o) \
		  $(LIBFILE1)(module-camd35.o) \
		  $(LIBFILE1)(module-radegast.o) \
		  $(LIBFILE1)(module-serial.o) \
		  $(LIBFILE1)(module-monitor.o) \
		  $(LIBFILE1)(module-newcamd.o) \
		  $(LIBFILE1)(module-cccam.o) \
		  $(LIBFILE1)(module-cccshare.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-gbox.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-constcw.o) \
		  $(LIBFILE1)(module-dvbapi.o) \
		  $(LIBFILE1)(module-stat.o) \
		  $(LIBFILE1)(module-csp.o) \
		  $(LIBFILE1)(module-datastruct-llist.o) \
		  $(LIBFILE1)(oscam-chk.o) \
		  $(LIBFILE1)(oscam-http.o) \
		  $(LIBFILE1)(oscam-http-helpers.o) \
		  $(LIBFILE1)(oscam-ac.o) \
		  $(LIBFILE1)(module-coolapi.o)\
		  $(LIBFILE1)(module-lcd.o)

ifdef USE_LIBUSB
all:		prepare $(EXEFILE1) $(EXEFILE2)
else
all:		prepare $(EXEFILE1)
endif

prepare:
		@-echo "-----------------------------------------------------"
		@-echo "Build for platform $(TYP)"
		@-echo "-----------------------------------------------------"
		@echo "$(TYP)" | awk -F- ' \
		  { \
		    printf("#define CS_OSTYPE \"%s\"\n", $$0);  \
		    printf("#define CS_OS_CPU \"%s\"\n", $$1);  \
		    printf("#define CS_OS_HW  \"%s\"\n", $$2);  \
		    printf("#define CS_OS_SYS \"%s\"\n", $$3);  \
		  }' > oscam-ostype.h
		@[ -d "$(LIBDIR)" ] || mkdir "$(LIBDIR)"

ifeq ($(wildcard csgbox), csgbox)
	@-echo "#define CS_WITH_GBOX 1" >> oscam-ostype.h
	$(SAY) "MAKE	csgbox"
	$(Q)$(MAKE) -s -C csgbox
endif
	$(SAY) "MAKE	algo"
	$(Q)$(MAKE) -s -C algo
	$(SAY) "MAKE	cscrypt"
	$(Q)$(MAKE) -s -C cscrypt
	$(SAY) "MAKE	csctapi"
	$(Q)$(MAKE) -s -C csctapi

$(EXEFILE1):	oscam.c $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) $(GENERAL)
	$(SAY) "LD	$@"
	$(Q)$(CC) $(LDFLAGS) oscam.c $(LIBS) $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) -o $@
ifndef DEBUG
	$(SAY) "STRIP	$@"
	$(Q)$(STRIP) $@
endif

$(EXEFILE2):	utils/list_smargo.c
	$(SAY) "LD	$@"
	$(Q)$(CC) $(LDFLAGS) utils/list_smargo.c $(LIBS) -o $@
ifndef DEBUG
	$(SAY) "STRIP	$@"
	$(Q)$(STRIP) $@
endif

$(LIBFILE1):	$(OBJECTS1)
	$(SAY) "RANLIB	$@"
	-$(Q)$(RANLIB) $@

$(OBJECTS1):	$(GENERAL)

.c.a:
	$(SAY) "CC	$<"
	$(Q)$(CC) $(CFLAGS) -Icsctapi $<
	$(Q)$(AR) $(ARFLAGS) $@ $*.o
	-@rm -f $*.o

.SUFFIXES:	.o .c .a
